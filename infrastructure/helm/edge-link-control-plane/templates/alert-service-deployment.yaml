apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "edge-link-control-plane.fullname" . }}-alert-service
  labels:
    {{- include "edge-link-control-plane.labels" . | nindent 4 }}
    app.kubernetes.io/component: alert-service
spec:
  replicas: {{ .Values.alertService.replicaCount }}
  selector:
    matchLabels:
      {{- include "edge-link-control-plane.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: alert-service
  template:
    metadata:
      labels:
        {{- include "edge-link-control-plane.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: alert-service
    spec:
      serviceAccountName: {{ include "edge-link-control-plane.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.alertService.podSecurityContext | nindent 8 }}
      containers:
      - name: alert-service
        securityContext:
          {{- toYaml .Values.alertService.securityContext | nindent 12 }}
        image: "{{ .Values.alertService.image.repository }}:{{ .Values.alertService.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.alertService.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.alertService.service.port }}
            protocol: TCP
        {{- if .Values.alertService.healthProbes.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.alertService.healthProbes.liveness.path }}
            port: http
          initialDelaySeconds: {{ .Values.alertService.healthProbes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.alertService.healthProbes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.alertService.healthProbes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.alertService.healthProbes.liveness.failureThreshold }}
        {{- end }}
        {{- if .Values.alertService.healthProbes.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.alertService.healthProbes.readiness.path }}
            port: http
          initialDelaySeconds: {{ .Values.alertService.healthProbes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.alertService.healthProbes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.alertService.healthProbes.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.alertService.healthProbes.readiness.failureThreshold }}
        {{- end }}
        {{- if .Values.alertService.healthProbes.startup.enabled }}
        startupProbe:
          httpGet:
            path: {{ .Values.alertService.healthProbes.startup.path }}
            port: http
          initialDelaySeconds: {{ .Values.alertService.healthProbes.startup.initialDelaySeconds }}
          periodSeconds: {{ .Values.alertService.healthProbes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.alertService.healthProbes.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.alertService.healthProbes.startup.failureThreshold }}
        {{- end }}
        env:
        - name: DB_HOST
          value: {{ .Values.postgresql.host | quote }}
        - name: DB_PORT
          value: {{ .Values.postgresql.port | quote }}
        - name: DB_NAME
          value: {{ .Values.postgresql.database | quote }}
        - name: DB_USER
          value: {{ .Values.postgresql.username | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresql.existingSecret | default (include "edge-link-control-plane.fullname" .) }}
              key: postgresql-password
        - name: REDIS_HOST
          value: {{ .Values.redis.host | quote }}
        - name: REDIS_PORT
          value: {{ .Values.redis.port | quote }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.redis.existingSecret | default (include "edge-link-control-plane.fullname" .) }}
              key: redis-password
        - name: LOG_LEVEL
          value: {{ .Values.alertService.logLevel | quote }}
        - name: SMTP_HOST
          value: {{ .Values.alertService.smtp.host | quote }}
        - name: SMTP_PORT
          value: {{ .Values.alertService.smtp.port | quote }}
        - name: SMTP_USER
          value: {{ .Values.alertService.smtp.user | quote }}
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.alertService.smtp.existingSecret | default (include "edge-link-control-plane.fullname" .) }}
              key: smtp-password
              optional: true
        resources:
          {{- toYaml .Values.alertService.resources | nindent 12 }}
      {{- with .Values.alertService.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.alertService.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.alertService.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
