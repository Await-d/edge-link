# ============================================
# Stage 1: Build Stage
# Purpose: Compile EdgeLink Lite client for containers
# ============================================
ARG GO_VERSION=1.21
ARG ALPINE_VERSION=3.18
ARG GO_ALPINE_DIGEST=sha256:2414035b086e3c42b99654c8b26e6f5b1b1598080d65fd03c7f499552ff4dc94
ARG ALPINE_DIGEST=sha256:de0eb0b3f2a47ba1eb89389859a9bd88b28e82f5826b6969ad604979713c2d4f

FROM golang:${GO_VERSION}-alpine@${GO_ALPINE_DIGEST} AS builder

# Declare build-time metadata
ARG BUILD_DATE
ARG VERSION
ARG COMMIT_SHA

# Install build dependencies
# - git: for go mod download
# - make: for build scripts
# - gcc/musl-dev: for CGO compilation if needed
RUN apk add --no-cache \
    git=2.40.1-r0 \
    make=4.4.1-r1 \
    gcc=12.2.1_git20220924-r10 \
    musl-dev=1.2.4-r2

WORKDIR /build

# Copy client source code
COPY clients/desktop /build

# Build lightweight CLI binary with reproducible build flags
RUN cd cmd/edgelink-lite && \
    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -trimpath \
    -buildvcs=false \
    -ldflags="-w -s -buildid= -X main.Version=${VERSION} -X main.CommitSHA=${COMMIT_SHA} -X main.BuildDate=${BUILD_DATE}" \
    -o /app/edgelink-lite

# ============================================
# Stage 2: Final Runtime Stage
# Purpose: Minimal container image with WireGuard support
# ============================================
FROM alpine:${ALPINE_VERSION}@${ALPINE_DIGEST}

# Declare build-time metadata (must re-declare in multi-stage build)
ARG BUILD_DATE
ARG VERSION
ARG COMMIT_SHA

# Install runtime dependencies
# - wireguard-tools: for WireGuard VPN management
# - iptables: for network routing rules
# - ca-certificates: for HTTPS connections
RUN apk add --no-cache \
    wireguard-tools=1.0.20210914-r3 \
    iptables=1.8.9-r2 \
    ca-certificates=20230506-r0 && \
    rm -rf /var/cache/apk/*

# Copy binary from builder stage
COPY --from=builder /app/edgelink-lite /usr/local/bin/edgelink-lite

# Create configuration directory
RUN mkdir -p /etc/edgelink

# Add OCI metadata labels
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.revision="${COMMIT_SHA}" \
      org.opencontainers.image.title="EdgeLink Sidecar" \
      org.opencontainers.image.description="EdgeLink Sidecar VPN Client for Container Workloads" \
      org.opencontainers.image.vendor="EdgeLink" \
      org.opencontainers.image.authors="EdgeLink Development Team"

# Expose WireGuard UDP port
EXPOSE 51820/udp

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD pgrep edgelink-lite || exit 1

# Copy and set up entrypoint script
COPY infrastructure/docker/entrypoint-sidecar.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["--connect"]
