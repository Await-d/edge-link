name: Generate CHANGELOG

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  changelog:
    name: Generate and Update CHANGELOG
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changelog generation

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Make scripts executable
        run: |
          chmod +x scripts/generate-changelog.sh
          chmod +x scripts/get-version.sh

      - name: Generate CHANGELOG
        id: changelog
        run: |
          # Generate full changelog
          ./scripts/generate-changelog.sh

          # Get current version
          VERSION=$(./scripts/get-version.sh --tag)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Get changelog content for latest version
          if [ -f CHANGELOG.md ]; then
            # Extract content between first two ## headers
            CHANGELOG_CONTENT=$(awk '/^## \[/{i++}i==1{print}/^## \[/{if(i>1)exit}' CHANGELOG.md | tail -n +2)
            echo "content<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Commit CHANGELOG
        run: |
          if [ -n "$(git status --porcelain CHANGELOG.md)" ]; then
            git add CHANGELOG.md
            git commit -m "docs: update CHANGELOG for ${{ steps.changelog.outputs.version }}"
            git push
          else
            echo "No changes to CHANGELOG.md"
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          body: ${{ steps.changelog.outputs.content }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on commit
        uses: actions/github-script@v7
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.changelog.outputs.content != ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changelog = `${{ steps.changelog.outputs.content }}`;
            if (changelog && changelog.trim()) {
              github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: `## ðŸ“‹ Changelog\n\n${changelog}`
              });
            }
