# Prometheus Configuration for EdgeLink Control Plane
# This configuration scrapes metrics from all EdgeLink services

global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
  external_labels:
    cluster: 'edgelink-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'
      timeout: 10s
      api_version: v2

# Load alert rules
rule_files:
  - 'alerts.yml'

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          component: 'prometheus'

  # API Gateway
  - job_name: 'api-gateway'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'api-gateway:8080'
        labels:
          component: 'api-gateway'
          service: 'control-plane'
    # Kubernetes service discovery (when deployed)
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - edgelink-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        regex: api-gateway
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node

  # Device Service
  - job_name: 'device-service'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'device-service:50051'
        labels:
          component: 'device-service'
          service: 'control-plane'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - edgelink-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        regex: device-service
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node

  # Topology Service
  - job_name: 'topology-service'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'topology-service:50052'
        labels:
          component: 'topology-service'
          service: 'control-plane'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - edgelink-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        regex: topology-service
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node

  # NAT Coordinator
  - job_name: 'nat-coordinator'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'nat-coordinator:50053'
        labels:
          component: 'nat-coordinator'
          service: 'control-plane'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - edgelink-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        regex: nat-coordinator
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node

  # Alert Service
  - job_name: 'alert-service'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'alert-service:8081'
        labels:
          component: 'alert-service'
          service: 'control-plane'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - edgelink-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        regex: alert-service
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod

  # Background Worker
  - job_name: 'background-worker'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'background-worker:8082'
        labels:
          component: 'background-worker'
          service: 'control-plane'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - edgelink-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        regex: background-worker
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod

  # PostgreSQL Exporter
  - job_name: 'postgres'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'postgres-exporter:9187'
        labels:
          component: 'postgres'
          service: 'database'

  # Redis Exporter
  - job_name: 'redis'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'redis-exporter:9121'
        labels:
          component: 'redis'
          service: 'cache'

  # Node Exporter (for host metrics)
  - job_name: 'node'
    scrape_interval: 30s
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:9100'
        target_label: __address__
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node

  # cAdvisor (for container metrics)
  - job_name: 'cadvisor'
    scrape_interval: 30s
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:10250'
        target_label: __address__
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node
      - target_label: __metrics_path__
        replacement: /metrics/cadvisor

  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        regex: default;kubernetes;https
        action: keep

  # Kubernetes Pods (with prometheus.io annotations)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      # Only scrape pods with prometheus.io/scrape: "true" annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        regex: "true"
        action: keep
      # Use custom scrape path if specified
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use custom port if specified
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add pod metadata labels
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        target_label: app
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        target_label: component
